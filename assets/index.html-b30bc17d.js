import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c,a as s,b as n,d as t,e}from"./app-d70a109d.js";const i={},u=s("h1",{id:"elastic-技术栈之-logstash",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#elastic-技术栈之-logstash","aria-hidden":"true"},"#"),n(" Elastic 技术栈之 Logstash")],-1),r=s("p",null,"本文是 Elastic 技术栈（ELK）的 Logstash 应用。",-1),d={href:"https://github.com/dunwu/JavaStack/blob/master/docs/javatool/elastic/elastic-quickstart.md",target:"_blank",rel:"noopener noreferrer"},g=e('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>Logstash 可以传输和处理你的日志、事务或其他数据。</p><h3 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h3><p>Logstash 是 Elasticsearch 的最佳数据管道。</p><p>Logstash 是插件式管理模式，在输入、过滤、输出以及编码过程中都可以使用插件进行定制。Logstash 社区有超过 200 种可用插件。</p><h3 id="工作原理" tabindex="-1"><a class="header-anchor" href="#工作原理" aria-hidden="true">#</a> 工作原理</h3><p>Logstash 有两个必要元素：<code>input</code> 和 <code>output</code> ，一个可选元素：<code>filter</code>。</p><p>这三个元素，分别代表 Logstash 事件处理的三个阶段：输入 &gt; 过滤器 &gt; 输出。</p><figure><img src="https://www.elastic.co/guide/en/logstash/current/static/images/basic_logstash_pipeline.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><ul><li>input 负责从数据源采集数据。</li><li>filter 将数据修改为你指定的格式或内容。</li><li>output 将数据传输到目的地。</li></ul><p>在实际应用场景中，通常输入、输出、过滤器不止一个。Logstash 的这三个元素都使用插件式管理方式，用户可以根据应用需要，灵活的选用各阶段需要的插件，并组合使用。</p><p>后面将对插件展开讲解，暂且不表。</p><h2 id="设置" tabindex="-1"><a class="header-anchor" href="#设置" aria-hidden="true">#</a> 设置</h2><h3 id="设置文件" tabindex="-1"><a class="header-anchor" href="#设置文件" aria-hidden="true">#</a> 设置文件</h3><ul><li><strong><code>logstash.yml</code></strong>：logstash 的默认启动配置文件</li><li><strong><code>jvm.options</code></strong>：logstash 的 JVM 配置文件。</li><li><strong><code>startup.options</code></strong> (Linux)：包含系统安装脚本在 <code>/usr/share/logstash/bin</code> 中使用的选项为您的系统构建适当的启动脚本。安装 Logstash 软件包时，系统安装脚本将在安装过程结束时执行，并使用 <code>startup.options</code> 中指定的设置来设置用户，组，服务名称和服务描述等选项。</li></ul><h3 id="logstash-yml-设置项" tabindex="-1"><a class="header-anchor" href="#logstash-yml-设置项" aria-hidden="true">#</a> logstash.yml 设置项</h3>',16),h={href:"https://www.elastic.co/guide/en/logstash/current/logstash-settings-file.html",target:"_blank",rel:"noopener noreferrer"},k=s("thead",null,[s("tr",null,[s("th",null,"参数"),s("th",null,"描述"),s("th",null,"默认值")])],-1),v=s("tr",null,[s("td",null,[s("code",null,"node.name")]),s("td",null,"节点名"),s("td",null,"机器的主机名")],-1),b=s("tr",null,[s("td",null,[s("code",null,"path.data")]),s("td",null,"Logstash 及其插件用于任何持久性需求的目录。"),s("td",null,[s("code",null,"LOGSTASH_HOME/data")])],-1),m=s("tr",null,[s("td",null,[s("code",null,"pipeline.workers")]),s("td",null,"同时执行管道的过滤器和输出阶段的工作任务数量。如果发现事件正在备份，或 CPU 未饱和，请考虑增加此数字以更好地利用机器处理能力。"),s("td",null,"Number of the host’s CPU cores")],-1),_=s("tr",null,[s("td",null,[s("code",null,"pipeline.batch.size")]),s("td",null,[n("尝试执行过滤器和输出之前，单个工作线程从输入收集的最大事件数量。较大的批量处理大小一般来说效率更高，但是以增加的内存开销为代价。您可能必须通过设置 "),s("code",null,"LS_HEAP_SIZE"),n(" 变量来有效使用该选项来增加 JVM 堆大小。")]),s("td",null,[s("code",null,"125")])],-1),f=s("tr",null,[s("td",null,[s("code",null,"pipeline.batch.delay")]),s("td",null,"创建管道事件批处理时，在将一个尺寸过小的批次发送给管道工作任务之前，等待每个事件需要多长时间（毫秒）。"),s("td",null,[s("code",null,"5")])],-1),q=s("tr",null,[s("td",null,[s("code",null,"pipeline.unsafe_shutdown")]),s("td",null,"如果设置为 true，则即使在内存中仍存在 inflight 事件时，也会强制 Logstash 在关闭期间退出。默认情况下，Logstash 将拒绝退出，直到所有接收到的事件都被推送到输出。启用此选项可能会导致关机期间数据丢失。"),s("td",null,[s("code",null,"false")])],-1),x=s("td",null,[s("code",null,"path.config")],-1),w=s("td",null,"主管道的 Logstash 配置路径。如果您指定一个目录或通配符，配置文件将按字母顺序从目录中读取。",-1),j={href:"https://github.com/elastic/logstash/blob/6.1/docs/static/settings-file.asciidoc#dir-layout",target:"_blank",rel:"noopener noreferrer"},L=s("tr",null,[s("td",null,[s("code",null,"config.string")]),s("td",null,"包含用于主管道的管道配置的字符串。使用与配置文件相同的语法。"),s("td",null,"None")],-1),y=s("tr",null,[s("td",null,[s("code",null,"config.test_and_exit")]),s("td",null,"设置为 true 时，检查配置是否有效，然后退出。请注意，使用此设置不会检查 grok 模式的正确性。 Logstash 可以从目录中读取多个配置文件。如果将此设置与 log.level：debug 结合使用，则 Logstash 将记录组合的配置文件，并注掉其源文件的配置块。"),s("td",null,[s("code",null,"false")])],-1),E=s("tr",null,[s("td",null,[s("code",null,"config.reload.automatic")]),s("td",null,"设置为 true 时，定期检查配置是否已更改，并在配置更改时重新加载配置。这也可以通过 SIGHUP 信号手动触发。"),s("td",null,[s("code",null,"false")])],-1),P=s("tr",null,[s("td",null,[s("code",null,"config.reload.interval")]),s("td",null,"Logstash 检查配置文件更改的时间间隔。"),s("td",null,[s("code",null,"3s")])],-1),I=s("tr",null,[s("td",null,[s("code",null,"config.debug")]),s("td",null,[n("设置为 true 时，将完全编译的配置显示为调试日志消息。您还必须设置"),s("code",null,"log.level：debug"),n("。警告：日志消息将包括任何传递给插件配置作为明文的“密码”选项，并可能导致明文密码出现在您的日志！")]),s("td",null,[s("code",null,"false")])],-1),S=s("tr",null,[s("td",null,[s("code",null,"config.support_escapes")]),s("td",null,"当设置为 true 时，带引号的字符串将处理转义字符。"),s("td",null,[s("code",null,"false")])],-1),J=s("tr",null,[s("td",null,[s("code",null,"modules")]),s("td",null,"配置时，模块必须处于上表所述的嵌套 YAML 结构中。"),s("td",null,"None")],-1),C=s("tr",null,[s("td",null,[s("code",null,"http.host")]),s("td",null,"绑定地址"),s("td",null,[s("code",null,'"127.0.0.1"')])],-1),T=s("tr",null,[s("td",null,[s("code",null,"http.port")]),s("td",null,"绑定端口"),s("td",null,[s("code",null,"9600")])],-1),A=s("tr",null,[s("td",null,[s("code",null,"log.level")]),s("td",null,"日志级别。有效选项：fatal > error > warn > info > debug > trace"),s("td",null,[s("code",null,"info")])],-1),N=s("tr",null,[s("td",null,[s("code",null,"log.format")]),s("td",null,"日志格式。json （JSON 格式）或 plain （原对象）"),s("td",null,[s("code",null,"plain")])],-1),U=s("tr",null,[s("td",null,[s("code",null,"path.logs")]),s("td",null,"Logstash 自身日志的存储路径"),s("td",null,[s("code",null,"LOGSTASH_HOME/logs")])],-1),K=s("tr",null,[s("td",null,[s("code",null,"path.plugins")]),s("td",null,"在哪里可以找到自定义的插件。您可以多次指定此设置以包含多个路径。"),s("td")],-1),D=e(`<h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h2><h3 id="命令行" tabindex="-1"><a class="header-anchor" href="#命令行" aria-hidden="true">#</a> 命令行</h3><p>通过命令行启动 logstash 的方式如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bin/logstash <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中 <code>options</code> 是您可以指定用于控制 Logstash 执行的命令行标志。</p><p>在命令行上设置的任何标志都会覆盖 Logstash 设置文件（<code>logstash.yml</code>）中的相应设置，但设置文件本身不会更改。</p>`,6),M=e(`<p><strong>注</strong></p><p>虽然可以通过指定命令行参数的方式，来控制 logstash 的运行方式，但显然这么做很麻烦。</p><p>建议通过指定配置文件的方式，来控制 logstash 运行，启动命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bin/logstash <span class="token parameter variable">-f</span> logstash.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),O={href:"https://www.elastic.co/guide/en/logstash/current/running-logstash-command-line.html",target:"_blank",rel:"noopener noreferrer"},B=e(`<h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h3><p>上节，我们了解到，logstash 可以执行 <code>bin/logstash -f logstash.conf</code> ，按照配置文件中的参数去覆盖默认设置文件（<code>logstash.yml</code>）中的设置。</p><p>这节，我们就来学习一下这个配置文件如何配置参数。</p><h4 id="配置文件结构" tabindex="-1"><a class="header-anchor" href="#配置文件结构" aria-hidden="true">#</a> 配置文件结构</h4><p>在工作原理一节中，我们已经知道了 Logstash 主要有三个工作阶段 input 、filter、output。而 logstash 配置文件文件结构也与之相对应：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>input <span class="token punctuation">{</span><span class="token punctuation">}</span>

filter <span class="token punctuation">{</span><span class="token punctuation">}</span>

output <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>每个部分都包含一个或多个插件的配置选项。如果指定了多个过滤器，则会按照它们在配置文件中的显示顺序应用它们。</p></blockquote><h4 id="插件配置" tabindex="-1"><a class="header-anchor" href="#插件配置" aria-hidden="true">#</a> 插件配置</h4><p>插件的配置由插件名称和插件的一个设置块组成。</p><p>下面的例子中配置了两个输入文件配置：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>input <span class="token punctuation">{</span>
  file <span class="token punctuation">{</span>
    <span class="token parameter">path</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;/var/log/messages&quot;</span>
    <span class="token parameter">type</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;syslog&quot;</span>
  <span class="token punctuation">}</span>

  file <span class="token punctuation">{</span>
    <span class="token parameter">path</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;/var/log/apache/access.log&quot;</span>
    <span class="token parameter">type</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;apache&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),F={href:"https://www.elastic.co/guide/en/logstash/current/input-plugins.html",target:"_blank",rel:"noopener noreferrer"},H={href:"https://www.elastic.co/guide/en/logstash/current/output-plugins.html",target:"_blank",rel:"noopener noreferrer"},R={href:"https://www.elastic.co/guide/en/logstash/current/filter-plugins.html",target:"_blank",rel:"noopener noreferrer"},V={href:"https://www.elastic.co/guide/en/logstash/current/codec-plugins.html",target:"_blank",rel:"noopener noreferrer"},G=e(`<h4 id="值类型" tabindex="-1"><a class="header-anchor" href="#值类型" aria-hidden="true">#</a> 值类型</h4><p>一个插件可以要求设置的值是一个特定的类型，比如布尔值，列表或哈希值。以下值类型受支持。</p><ul><li>Array</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token parameter">users</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span><span class="token parameter">id</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> bob<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token parameter">id</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> jane<span class="token punctuation">}</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Lists</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token parameter">path</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;/var/log/messages&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/var/log/*.log&#39;</span><span class="token punctuation">]</span>
<span class="token parameter">uris</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;http://elastic.co&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;http://example.net&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Boolean</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token parameter">ssl_enable</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Bytes</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token parameter">my_bytes</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;1113&quot;</span>   # <span class="token number">1113</span> bytes
  <span class="token parameter">my_bytes</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;10MiB&quot;</span>  # <span class="token number">10485760</span> bytes
  <span class="token parameter">my_bytes</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;100kib&quot;</span> # <span class="token number">102400</span> bytes
  <span class="token parameter">my_bytes</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;180 mb&quot;</span> # <span class="token number">180000000</span> bytes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Codec</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token parameter">codec</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;json&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Hash</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token parameter">match</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;field1&quot;</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;value1&quot;</span>
  <span class="token string">&quot;field2&quot;</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;value2&quot;</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Number</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token parameter">port</span> <span class="token operator">=&gt;</span> <span class="token number">33</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Password</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token parameter">my_password</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;password&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>URI</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token parameter">my_uri</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;http://foo:bar@example.net&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Path</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token parameter">my_path</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;/tmp/logstash&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>String</p></li><li><p>转义字符</p></li></ul><h2 id="插件" tabindex="-1"><a class="header-anchor" href="#插件" aria-hidden="true">#</a> 插件</h2><h3 id="input" tabindex="-1"><a class="header-anchor" href="#input" aria-hidden="true">#</a> input</h3><blockquote><p>Logstash 支持各种输入选择 ，可以在同一时间从众多常用来源捕捉事件。能够以连续的流式传输方式，轻松地从您的日志、指标、Web 应用、数据存储以及各种 AWS 服务采集数据。</p></blockquote><h4 id="常用-input-插件" tabindex="-1"><a class="header-anchor" href="#常用-input-插件" aria-hidden="true">#</a> 常用 input 插件</h4><ul><li><strong>file</strong>：从文件系统上的文件读取，就像 UNIX 命令 <code>tail -0F</code> 一样</li><li>**syslog：**在众所周知的端口 514 上侦听系统日志消息，并根据 RFC3164 格式进行解析</li><li>**redis：**从 redis 服务器读取，使用 redis 通道和 redis 列表。 Redis 经常用作集中式 Logstash 安装中的“代理”，它将来自远程 Logstash“托运人”的 Logstash 事件排队。</li><li>**beats：**处理由 Filebeat 发送的事件。</li></ul>`,28),W={href:"https://www.elastic.co/guide/en/logstash/current/input-plugins.html",target:"_blank",rel:"noopener noreferrer"},z=e('<h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h3><blockquote><p>过滤器是 Logstash 管道中的中间处理设备。如果符合特定条件，您可以将条件过滤器组合在一起，对事件执行操作。</p></blockquote><h4 id="常用-filter-插件" tabindex="-1"><a class="header-anchor" href="#常用-filter-插件" aria-hidden="true">#</a> 常用 filter 插件</h4><ul><li>**grok：**解析和结构任意文本。 Grok 目前是 Logstash 中将非结构化日志数据解析为结构化和可查询的最佳方法。</li><li>**mutate：**对事件字段执行一般转换。您可以重命名，删除，替换和修改事件中的字段。</li><li>**drop：**完全放弃一个事件，例如调试事件。</li><li>**clone：**制作一个事件的副本，可能会添加或删除字段。</li><li>**geoip：**添加有关 IP 地址的地理位置的信息（也可以在 Kibana 中显示惊人的图表！）</li></ul>',4),$={href:"https://www.elastic.co/guide/en/logstash/current/filter-plugins.html",target:"_blank",rel:"noopener noreferrer"},X=s("h3",{id:"output",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#output","aria-hidden":"true"},"#"),n(" output")],-1),Y=s("blockquote",null,[s("p",null,"输出是 Logstash 管道的最后阶段。一个事件可以通过多个输出，但是一旦所有输出处理完成，事件就完成了执行。")],-1),Z=s("h4",{id:"常用-output-插件",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#常用-output-插件","aria-hidden":"true"},"#"),n(" 常用 output 插件")],-1),Q=s("li",null,"**elasticsearch：**将事件数据发送给 Elasticsearch（推荐模式）。",-1),ss=s("li",null,"**file：**将事件数据写入文件或磁盘。",-1),ns={href:"http://graphite.readthedocs.io/en/latest/%EF%BC%89%E3%80%82",target:"_blank",rel:"noopener noreferrer"},as=s("li",null,"**statsd：**将事件数据发送到 statsd （这是一种侦听统计数据的服务，如计数器和定时器，通过 UDP 发送并将聚合发送到一个或多个可插入的后端服务）。",-1),ts={href:"https://www.elastic.co/guide/en/logstash/current/output-plugins.html",target:"_blank",rel:"noopener noreferrer"},es=s("h3",{id:"codec",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#codec","aria-hidden":"true"},"#"),n(" codec")],-1),ls=s("p",null,"用于格式化对应的内容。",-1),os=s("h4",{id:"常用-codec-插件",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#常用-codec-插件","aria-hidden":"true"},"#"),n(" 常用 codec 插件")],-1),ps=s("ul",null,[s("li",null,"**json：**以 JSON 格式对数据进行编码或解码。"),s("li",null,"**multiline：**将多行文本事件（如 java 异常和堆栈跟踪消息）合并为单个事件。")],-1),cs={href:"https://www.elastic.co/guide/en/logstash/current/codec-plugins.html",target:"_blank",rel:"noopener noreferrer"},is=e(`<h2 id="实战" tabindex="-1"><a class="header-anchor" href="#实战" aria-hidden="true">#</a> 实战</h2><p>前面的内容都是对 Logstash 的介绍和原理说明。接下来，我们来实战一些常见的应用场景。</p><h3 id="传输控制台数据" tabindex="-1"><a class="header-anchor" href="#传输控制台数据" aria-hidden="true">#</a> 传输控制台数据</h3><blockquote><p>stdin input 插件从标准输入读取事件。这是最简单的 input 插件，一般用于测试场景。</p></blockquote><p><strong>应用</strong></p><p>（1）创建 <code>logstash-input-stdin.conf</code> ：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>input <span class="token punctuation">{</span> stdin <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
output <span class="token punctuation">{</span>
  elasticsearch <span class="token punctuation">{</span> <span class="token parameter">hosts</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string">&quot;localhost:9200&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
  stdout <span class="token punctuation">{</span> <span class="token parameter">codec</span> <span class="token operator">=&gt;</span> rubydebug <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),us={href:"https://www.elastic.co/guide/en/logstash/current/plugins-inputs-stdin.html",target:"_blank",rel:"noopener noreferrer"},rs=e(`<p>（2）执行 logstash，使用 <code>-f</code> 来指定你的配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bin/logstash <span class="token parameter variable">-f</span> logstash-input-stdin.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="传输-logback-日志" tabindex="-1"><a class="header-anchor" href="#传输-logback-日志" aria-hidden="true">#</a> 传输 logback 日志</h3>`,3),ds=s("p",null,"elk 默认使用的 Java 日志工具是 log4j2 ，并不支持 logback 和 log4j。",-1),gs={href:"https://github.com/logstash/logstash-logback-encoder",target:"_blank",rel:"noopener noreferrer"},hs={href:"https://github.com/logstash/logstash-logback-encoder",target:"_blank",rel:"noopener noreferrer"},ks={href:"https://github.com/dunwu/JavaStack/blob/master/docs/javalib/java-log.md",target:"_blank",rel:"noopener noreferrer"},vs=e(`<h4 id="tcp-应用" tabindex="-1"><a class="header-anchor" href="#tcp-应用" aria-hidden="true">#</a> TCP 应用</h4><p>logstash 配置</p><p>（1）创建 <code>logstash-input-tcp.conf</code> ：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>input <span class="token punctuation">{</span>
tcp <span class="token punctuation">{</span>
  <span class="token parameter">port</span> <span class="token operator">=&gt;</span> <span class="token number">9251</span>
  <span class="token parameter">codec</span> <span class="token operator">=&gt;</span> json_lines
  <span class="token parameter">mode</span> <span class="token operator">=&gt;</span> server
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
output <span class="token punctuation">{</span>
 elasticsearch <span class="token punctuation">{</span> <span class="token parameter">hosts</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string">&quot;localhost:9200&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
 stdout <span class="token punctuation">{</span> <span class="token parameter">codec</span> <span class="token operator">=&gt;</span> rubydebug <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),bs={href:"https://www.elastic.co/guide/en/logstash/current/plugins-inputs-tcp.html",target:"_blank",rel:"noopener noreferrer"},ms=e(`<p>（2）执行 logstash，使用 <code>-f</code> 来指定你的配置文件：<code>bin/logstash -f logstash-input-udp.conf</code></p><p>java 应用配置</p><p>（1）在 Java 应用的 pom.xml 中引入 jar 包：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>net.logstash.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logstash-logback-encoder<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- logback 依赖包 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>ch.qos.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logback-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>ch.qos.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logback-classic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>ch.qos.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logback-access<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）接着，在 logback.xml 中添加 appender</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ELK-TCP<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.appender.LogstashTcpSocketAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
 <span class="token comment">&lt;!--
 destination 是 logstash 服务的 host:port，
 相当于和 logstash 建立了管道，将日志数据定向传输到 logstash
 --&gt;</span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>destination</span><span class="token punctuation">&gt;</span></span>192.168.28.32:9251<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>destination</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.encoder.LogstashEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>io.github.dunwu.spring<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TRACE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">additivity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ELK-TCP<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),_s={href:"https://github.com/dunwu/JavaStack/blob/master/docs/javalib/java-log.md",target:"_blank",rel:"noopener noreferrer"},fs=s("strong",null,"实例：",-1),qs={href:"https://github.com/dunwu/JavaStack/blob/master/codes/javatool/src/main/resources/logback.xml",target:"_blank",rel:"noopener noreferrer"},xs=e(`<h4 id="udp-应用" tabindex="-1"><a class="header-anchor" href="#udp-应用" aria-hidden="true">#</a> UDP 应用</h4><p>UDP 和 TCP 的使用方式大同小异。</p><p>logstash 配置</p><p>（1）创建 <code>logstash-input-udp.conf</code> ：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>input <span class="token punctuation">{</span>
udp <span class="token punctuation">{</span>
  <span class="token parameter">port</span> <span class="token operator">=&gt;</span> <span class="token number">9250</span>
  <span class="token parameter">codec</span> <span class="token operator">=&gt;</span> json
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
output <span class="token punctuation">{</span>
 elasticsearch <span class="token punctuation">{</span> <span class="token parameter">hosts</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string">&quot;localhost:9200&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
 stdout <span class="token punctuation">{</span> <span class="token parameter">codec</span> <span class="token operator">=&gt;</span> rubydebug <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),ws={href:"https://www.elastic.co/guide/en/logstash/current/plugins-inputs-udp.html",target:"_blank",rel:"noopener noreferrer"},js=e(`<p>（2）执行 logstash，使用 <code>-f</code> 来指定你的配置文件：<code>bin/logstash -f logstash-input-udp.conf</code></p><p>java 应用配置</p><p>（1）在 Java 应用的 pom.xml 中引入 jar 包：</p><p>与 <strong>TCP 应用</strong> 一节中的引入依赖包完全相同。</p><p>（2）接着，在 logback.xml 中添加 appender</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ELK-UDP<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.appender.LogstashSocketAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host</span><span class="token punctuation">&gt;</span></span>192.168.28.32<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>host</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span><span class="token punctuation">&gt;</span></span>9250<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>io.github.dunwu.spring<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TRACE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">additivity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ELK-UDP<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),Ls={href:"https://github.com/dunwu/JavaStack/blob/master/docs/javalib/java-log.md",target:"_blank",rel:"noopener noreferrer"},ys=s("strong",null,"实例：",-1),Es={href:"https://github.com/dunwu/JavaStack/blob/master/codes/javatool/src/main/resources/logback.xml",target:"_blank",rel:"noopener noreferrer"},Ps=e(`<h3 id="传输文件" tabindex="-1"><a class="header-anchor" href="#传输文件" aria-hidden="true">#</a> 传输文件</h3><blockquote><p>在 Java Web 领域，需要用到一些重要的工具，例如 Tomcat 、Nginx 、Mysql 等。这些不属于业务应用，但是它们的日志数据对于定位问题、分析统计同样很重要。这时无法使用 logback 方式将它们的日志传输到 logstash。</p><p>如何采集这些日志文件呢？别急，你可以使用 logstash 的 file input 插件。</p><p>需要注意的是，传输文件这种方式，必须在日志所在的机器上部署 logstash 。</p></blockquote><p><strong>应用</strong></p><p>logstash 配置</p><p>（1）创建 <code>logstash-input-file.conf</code> ：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>input <span class="token punctuation">{</span>
 file <span class="token punctuation">{</span>
  <span class="token parameter">path</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string">&quot;/var/log/nginx/access.log&quot;</span><span class="token punctuation">]</span>
  <span class="token parameter">type</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;nginx-access-log&quot;</span>
  <span class="token parameter">start_position</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;beginning&quot;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

output <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;nginx-access-log&quot;</span> <span class="token punctuation">{</span>
  elasticsearch <span class="token punctuation">{</span>
   <span class="token parameter">hosts</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string">&quot;localhost:9200&quot;</span><span class="token punctuation">]</span>
   <span class="token parameter">index</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;nginx-access-log&quot;</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）执行 logstash，使用 <code>-f</code> 来指定你的配置文件：<code>bin/logstash -f logstash-input-file.conf</code></p>`,7),Is={href:"https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html",target:"_blank",rel:"noopener noreferrer"},Ss=e(`<h2 id="小技巧" tabindex="-1"><a class="header-anchor" href="#小技巧" aria-hidden="true">#</a> 小技巧</h2><h3 id="启动、终止应用" tabindex="-1"><a class="header-anchor" href="#启动、终止应用" aria-hidden="true">#</a> 启动、终止应用</h3><p>如果你的 logstash 每次都是通过指定配置文件方式启动。不妨建立一个启动脚本。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># cd xxx 进入 logstash 安装目录下的 bin 目录</span>
logstash <span class="token parameter variable">-f</span> logstash.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你的 logstash 运行在 linux 系统下，不妨使用 nohup 来启动一个守护进程。这样做的好处在于，即使关闭终端，应用仍会运行。</p>`,5),Js={href:"http://startup.sh",target:"_blank",rel:"noopener noreferrer"},Cs=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">nohup</span> ./logstash <span class="token parameter variable">-f</span> logstash.conf <span class="token operator">&gt;&gt;</span> nohup.out <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>终止应用没有什么好方法，你只能使用 ps -ef | grep logstash ，查出进程，将其 kill 。不过，我们可以写一个脚本来干这件事：</p>`,2),Ts={href:"http://shutdown.sh",target:"_blank",rel:"noopener noreferrer"},As=e('<p>脚本不多解释，请自行领会作用。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> logstash <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $2}&#39;</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">1</span><span class="token variable">`</span></span>\n<span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable">${PID}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料" aria-hidden="true">#</a> 资料</h2>',3),Ns={href:"https://www.elastic.co/guide/en/logstash/current/index.html",target:"_blank",rel:"noopener noreferrer"},Us={href:"https://github.com/logstash/logstash-logback-encoder",target:"_blank",rel:"noopener noreferrer"},Ks={href:"https://github.com/chenryn/logstash-best-practice-cn",target:"_blank",rel:"noopener noreferrer"},Ds={href:"https://github.com/judasn/Linux-Tutorial/blob/master/ELK-Install-And-Settings.md",target:"_blank",rel:"noopener noreferrer"},Ms=s("h2",{id:"推荐阅读",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#推荐阅读","aria-hidden":"true"},"#"),n(" 推荐阅读")],-1),Os={href:"https://github.com/dunwu/JavaStack/blob/master/docs/javatool/elastic/README.md",target:"_blank",rel:"noopener noreferrer"},Bs={href:"https://github.com/dunwu/JavaStack",target:"_blank",rel:"noopener noreferrer"};function Fs(Hs,Rs){const a=o("ExternalLinkIcon");return p(),c("div",null,[u,s("blockquote",null,[r,s("p",null,[n("如果不了解 Elastic 的安装、配置、部署，可以参考："),s("a",d,[n("Elastic 技术栈之快速入门"),t(a)])])]),g,s("p",null,[n("节选部分设置项，更多项请参考："),s("a",h,[n("https://www.elastic.co/guide/en/logstash/current/logstash-settings-file.html"),t(a)])]),s("table",null,[k,s("tbody",null,[v,b,m,_,f,q,s("tr",null,[x,w,s("td",null,[n("Platform-specific. See ["),s("a",j,[n("dir-layout]"),t(a)]),n(".")])]),L,y,E,P,I,S,J,C,T,A,N,U,K])]),D,s("blockquote",null,[M,s("p",null,[n("若想了解更多的命令行参数细节，请参考："),s("a",O,[n("https://www.elastic.co/guide/en/logstash/current/running-logstash-command-line.html"),t(a)])])]),B,s("p",null,[n("您可以配置的设置因插件类型而异。你可以参考： "),s("a",F,[n("Input Plugins"),t(a)]),n(", "),s("a",H,[n("Output Plugins"),t(a)]),n(", "),s("a",R,[n("Filter Plugins"),t(a)]),n(", 和 "),s("a",V,[n("Codec Plugins"),t(a)]),n(" 。")]),G,s("p",null,[n("更多详情请见："),s("a",W,[n("Input Plugins"),t(a)])]),z,s("p",null,[n("更多详情请见："),s("a",$,[n("Filter Plugins"),t(a)])]),X,Y,Z,s("ul",null,[Q,ss,s("li",null,[n("**graphite：**将事件数据发送给 graphite（一个流行的开源工具，存储和绘制指标。 "),s("a",ns,[n("http://graphite.readthedocs.io/en/latest/）。"),t(a)])]),as]),s("p",null,[n("更多详情请见："),s("a",ts,[n("Output Plugins"),t(a)])]),es,ls,os,ps,s("p",null,[n("更多插件请见："),s("a",cs,[n("Codec Plugins"),t(a)])]),is,s("p",null,[n("更多配置项可以参考："),s("a",us,[n("https://www.elastic.co/guide/en/logstash/current/plugins-inputs-stdin.html"),t(a)])]),rs,s("blockquote",null,[ds,s("p",null,[n("想使用 logback + logstash ，可以使用 "),s("a",gs,[n("logstash-logback-encoder"),t(a)]),n(" 。"),s("a",hs,[n("logstash-logback-encoder"),t(a)]),n(" 提供了 UDP / TCP / 异步方式来传输日志数据到 logstash。")]),s("p",null,[n("如果你使用的是 log4j ，也不是不可以用这种方式，只要引入桥接 jar 包即可。如果你对 log4j 、logback ，或是桥接 jar 包不太了解，可以参考我的这篇博文："),s("a",ks,[n("细说 Java 主流日志工具库"),t(a)]),n(" 。")])]),vs,s("p",null,[n("更多配置项可以参考："),s("a",bs,[n("https://www.elastic.co/guide/en/logstash/current/plugins-inputs-tcp.html"),t(a)])]),ms,s("p",null,[n("（3）接下来，就是 logback 的具体使用 ，如果对此不了解，不妨参考一下我的这篇博文："),s("a",_s,[n("细说 Java 主流日志工具库"),t(a)]),n(" 。")]),s("p",null,[fs,s("a",qs,[n("我的 logback.xml"),t(a)])]),xs,s("p",null,[n("更多配置项可以参考："),s("a",ws,[n("https://www.elastic.co/guide/en/logstash/current/plugins-inputs-udp.html"),t(a)])]),js,s("p",null,[n("（3）接下来，就是 logback 的具体使用 ，如果对此不了解，不妨参考一下我的这篇博文："),s("a",Ls,[n("细说 Java 主流日志工具库"),t(a)]),n(" 。")]),s("p",null,[ys,s("a",Es,[n("我的 logback.xml"),t(a)])]),Ps,s("p",null,[n("更多配置项可以参考："),s("a",Is,[n("https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html"),t(a)])]),Ss,s("p",null,[s("strong",null,[n("创建 "),s("a",Js,[n("startup.sh"),t(a)])])]),Cs,s("p",null,[s("strong",null,[n("创建 "),s("a",Ts,[n("shutdown.sh"),t(a)])])]),As,s("ul",null,[s("li",null,[s("a",Ns,[n("Logstash 官方文档"),t(a)])]),s("li",null,[s("a",Us,[n("logstash-logback-encoder"),t(a)])]),s("li",null,[s("a",Ks,[n("ELK Stack 权威指南"),t(a)])]),s("li",null,[s("a",Ds,[n("ELK（Elasticsearch、Logstash、Kibana）安装和配置"),t(a)])])]),Ms,s("ul",null,[s("li",null,[s("a",Os,[n("Elastic 技术栈"),t(a)])]),s("li",null,[s("a",Bs,[n("JavaStack"),t(a)])])])])}const Ws=l(i,[["render",Fs],["__file","index.html.vue"]]);export{Ws as default};
