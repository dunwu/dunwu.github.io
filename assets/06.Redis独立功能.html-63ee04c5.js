const e=JSON.parse('{"key":"v-df169ba4","path":"/12.%E6%95%B0%E6%8D%AE%E5%BA%93/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/06.Redis%E7%8B%AC%E7%AB%8B%E5%8A%9F%E8%83%BD.html","title":"Redis 独立功能","lang":"zh-CN","frontmatter":{"title":"Redis 独立功能","icon":"logos:redis","date":"2023-08-23T15:14:13.000Z","order":6,"category":["数据库","KV数据库","Redis"],"tag":["数据库","KV数据库","Redis"],"description":"Redis 独立功能 事务 Redis 提供的不是严格的事务，Redis 只保证串行执行命令，并且能保证全部执行，但是执行命令失败时并不会回滚，而是会继续执行下去。 MULTI 、 EXEC 、 DISCARD 和 WATCH 是 Redis 事务相关的命令。 事务可以一次执行多个命令， 并且有以下两个重要的保证： 事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。 事务是一个原子操作：事务中的命令要么全部被执行，要么全部都不执行。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/12.%E6%95%B0%E6%8D%AE%E5%BA%93/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/06.Redis%E7%8B%AC%E7%AB%8B%E5%8A%9F%E8%83%BD.html"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Redis 独立功能"}],["meta",{"property":"og:description","content":"Redis 独立功能 事务 Redis 提供的不是严格的事务，Redis 只保证串行执行命令，并且能保证全部执行，但是执行命令失败时并不会回滚，而是会继续执行下去。 MULTI 、 EXEC 、 DISCARD 和 WATCH 是 Redis 事务相关的命令。 事务可以一次执行多个命令， 并且有以下两个重要的保证： 事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。 事务是一个原子操作：事务中的命令要么全部被执行，要么全部都不执行。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-12T23:57:20.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"KV数据库"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2023-08-23T15:14:13.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-12T23:57:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis 独立功能\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-23T15:14:13.000Z\\",\\"dateModified\\":\\"2023-09-12T23:57:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io\\"}]}"]]},"headers":[{"level":2,"title":"事务","slug":"事务","link":"#事务","children":[{"level":3,"title":"MULTI","slug":"multi","link":"#multi","children":[]},{"level":3,"title":"EXEC","slug":"exec","link":"#exec","children":[]},{"level":3,"title":"DISCARD","slug":"discard","link":"#discard","children":[]},{"level":3,"title":"WATCH","slug":"watch","link":"#watch","children":[]},{"level":3,"title":"Rollback","slug":"rollback","link":"#rollback","children":[]}]},{"level":2,"title":"订阅与发布","slug":"订阅与发布","link":"#订阅与发布","children":[]},{"level":2,"title":"Lua","slug":"lua","link":"#lua","children":[{"level":3,"title":"为什么使用 Lua","slug":"为什么使用-lua","link":"#为什么使用-lua","children":[]},{"level":3,"title":"命令","slug":"命令","link":"#命令","children":[]},{"level":3,"title":"Redis 执行 Lua 的工作流程","slug":"redis-执行-lua-的工作流程","link":"#redis-执行-lua-的工作流程","children":[]},{"level":3,"title":"Redis 执行 Lua 的要点","slug":"redis-执行-lua-的要点","link":"#redis-执行-lua-的要点","children":[]}]},{"level":2,"title":"管道","slug":"管道","link":"#管道","children":[]},{"level":2,"title":"Redis 事件","slug":"redis-事件","link":"#redis-事件","children":[{"level":3,"title":"文件事件","slug":"文件事件","link":"#文件事件","children":[]},{"level":3,"title":"时间事件","slug":"时间事件","link":"#时间事件","children":[]},{"level":3,"title":"事件的调度与执行","slug":"事件的调度与执行","link":"#事件的调度与执行","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1694447058000,"updatedTime":1694563040000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":2}]},"readingTime":{"minutes":12.66,"words":3799},"filePathRelative":"12.数据库/05.KV数据库/01.Redis/06.Redis独立功能.md","localizedDate":"2023年8月23日","excerpt":"<h1> Redis 独立功能</h1>\\n<h2> 事务</h2>\\n<blockquote>\\n<p><strong>Redis 提供的不是严格的事务，Redis 只保证串行执行命令，并且能保证全部执行，但是执行命令失败时并不会回滚，而是会继续执行下去</strong>。</p>\\n</blockquote>\\n<p><code>MULTI</code> 、 <code>EXEC</code> 、 <code>DISCARD</code> 和 <code>WATCH</code> 是 Redis 事务相关的命令。</p>\\n<p>事务可以一次执行多个命令， 并且有以下两个重要的保证：</p>\\n<ul>\\n<li>事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。</li>\\n<li>事务是一个原子操作：事务中的命令要么全部被执行，要么全部都不执行。</li>\\n</ul>","autoDesc":true}');export{e as data};
