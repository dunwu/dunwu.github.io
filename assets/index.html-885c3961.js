const e=JSON.parse('{"key":"v-4487aca6","path":"/pages/aae60d/","title":"Redis 数据结构","lang":"zh-CN","frontmatter":{"title":"Redis 数据结构","date":"2023-08-23T15:14:13.000Z","category":["数据库","KV数据库","Redis"],"tag":["数据库","KV数据库","Redis","数据结构"],"permalink":"/pages/aae60d/","description":"Redis 数据结构 SDS SDS 简介 SDS 是 Simple Dynamic String 的缩写，即简单动态字符串。Redis 为 SDS 做了一些优化，以替代 C 字符串来表示字符串内容。此外，SDS 还被 Redis 用作缓冲区（buffer），如：AOF 模块中的 AOF 缓冲区；客户端状态中的输入缓冲区。 SDS 相比 C 字符串，具有以下优势： C 字符串 SDS 获取字符串长度的复杂度为 O(N) 。 获取字符串长度的复杂度为 O(1) 。 API 是不安全的，可能会造成缓冲区溢出。 API 是安全的，不会造成缓冲区溢出。 修改字符串长度 N 次必然需要执行 N 次内存重分配。 修改字符串长度 N 次最多需要执行 N 次内存重分配。 只能保存文本数据。 可以保存文本或者二进制数据。 可以使用所有 &lt;string.h&gt; 库中的函数。 可以使用一部分 &lt;string.h&gt; 库中的函数。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/pages/aae60d/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Redis 数据结构"}],["meta",{"property":"og:description","content":"Redis 数据结构 SDS SDS 简介 SDS 是 Simple Dynamic String 的缩写，即简单动态字符串。Redis 为 SDS 做了一些优化，以替代 C 字符串来表示字符串内容。此外，SDS 还被 Redis 用作缓冲区（buffer），如：AOF 模块中的 AOF 缓冲区；客户端状态中的输入缓冲区。 SDS 相比 C 字符串，具有以下优势： C 字符串 SDS 获取字符串长度的复杂度为 O(N) 。 获取字符串长度的复杂度为 O(1) 。 API 是不安全的，可能会造成缓冲区溢出。 API 是安全的，不会造成缓冲区溢出。 修改字符串长度 N 次必然需要执行 N 次内存重分配。 修改字符串长度 N 次最多需要执行 N 次内存重分配。 只能保存文本数据。 可以保存文本或者二进制数据。 可以使用所有 &lt;string.h&gt; 库中的函数。 可以使用一部分 &lt;string.h&gt; 库中的函数。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-10T10:35:58.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"KV数据库"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:published_time","content":"2023-08-23T15:14:13.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-10T10:35:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis 数据结构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-23T15:14:13.000Z\\",\\"dateModified\\":\\"2023-09-10T10:35:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io\\"}]}"]]},"headers":[{"level":2,"title":"SDS","slug":"sds","link":"#sds","children":[{"level":3,"title":"SDS 简介","slug":"sds-简介","link":"#sds-简介","children":[]},{"level":3,"title":"SDS 实现","slug":"sds-实现","link":"#sds-实现","children":[]},{"level":3,"title":"SDS 特性","slug":"sds-特性","link":"#sds-特性","children":[]}]},{"level":2,"title":"链表","slug":"链表","link":"#链表","children":[{"level":3,"title":"链表简介","slug":"链表简介","link":"#链表简介","children":[]},{"level":3,"title":"链表实现","slug":"链表实现","link":"#链表实现","children":[]}]},{"level":2,"title":"字典","slug":"字典","link":"#字典","children":[{"level":3,"title":"字典简介","slug":"字典简介","link":"#字典简介","children":[]},{"level":3,"title":"字典实现","slug":"字典实现","link":"#字典实现","children":[]},{"level":3,"title":"哈希算法","slug":"哈希算法","link":"#哈希算法","children":[]},{"level":3,"title":"哈希冲突","slug":"哈希冲突","link":"#哈希冲突","children":[]},{"level":3,"title":"rehash","slug":"rehash","link":"#rehash","children":[]}]},{"level":2,"title":"跳表","slug":"跳表","link":"#跳表","children":[{"level":3,"title":"跳表简介","slug":"跳表简介","link":"#跳表简介","children":[]},{"level":3,"title":"跳表实现","slug":"跳表实现","link":"#跳表实现","children":[]}]},{"level":2,"title":"整数集合","slug":"整数集合","link":"#整数集合","children":[{"level":3,"title":"整数集合简介","slug":"整数集合简介","link":"#整数集合简介","children":[]},{"level":3,"title":"整数集合实现","slug":"整数集合实现","link":"#整数集合实现","children":[]},{"level":3,"title":"整数集合升级","slug":"整数集合升级","link":"#整数集合升级","children":[]}]},{"level":2,"title":"压缩列表","slug":"压缩列表","link":"#压缩列表","children":[{"level":3,"title":"压缩列表简介","slug":"压缩列表简介","link":"#压缩列表简介","children":[]},{"level":3,"title":"压缩列表实现","slug":"压缩列表实现","link":"#压缩列表实现","children":[]}]},{"level":2,"title":"对象","slug":"对象","link":"#对象","children":[{"level":3,"title":"对象简介","slug":"对象简介","link":"#对象简介","children":[]},{"level":3,"title":"对象的类型","slug":"对象的类型","link":"#对象的类型","children":[]},{"level":3,"title":"对象的编码","slug":"对象的编码","link":"#对象的编码","children":[]},{"level":3,"title":"类型检查与命令多态","slug":"类型检查与命令多态","link":"#类型检查与命令多态","children":[]},{"level":3,"title":"内存回收","slug":"内存回收","link":"#内存回收","children":[]},{"level":3,"title":"对象共享","slug":"对象共享","link":"#对象共享","children":[]},{"level":3,"title":"对象的空转时长","slug":"对象的空转时长","link":"#对象的空转时长","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1694342158000,"updatedTime":1694342158000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":28.43,"words":8529},"filePathRelative":"12.数据库/05.KV数据库/01.Redis/03.Redis数据结构.md","localizedDate":"2023年8月23日","excerpt":"<h1> Redis 数据结构</h1>\\n<h2> SDS</h2>\\n<h3> SDS 简介</h3>\\n<p>SDS 是 Simple Dynamic String 的缩写，即<strong>简单动态字符串</strong>。Redis 为 SDS 做了一些优化，以替代 C 字符串来表示字符串内容。此外，SDS 还被 Redis 用作缓冲区（buffer），如：AOF 模块中的 AOF 缓冲区；客户端状态中的输入缓冲区。</p>\\n<p>SDS 相比 C 字符串，具有以下优势：</p>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">C 字符串</th>\\n<th style=\\"text-align:left\\">SDS</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\">获取字符串长度的复杂度为 O(N) 。</td>\\n<td style=\\"text-align:left\\">获取字符串长度的复杂度为 O(1) 。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">API 是不安全的，可能会造成缓冲区溢出。</td>\\n<td style=\\"text-align:left\\">API 是安全的，不会造成缓冲区溢出。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">修改字符串长度 <code>N</code> 次必然需要执行 <code>N</code> 次内存重分配。</td>\\n<td style=\\"text-align:left\\">修改字符串长度 <code>N</code> 次最多需要执行 <code>N</code> 次内存重分配。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">只能保存文本数据。</td>\\n<td style=\\"text-align:left\\">可以保存文本或者二进制数据。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">可以使用所有 <code>&lt;string.h&gt;</code> 库中的函数。</td>\\n<td style=\\"text-align:left\\">可以使用一部分 <code>&lt;string.h&gt;</code> 库中的函数。</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{e as data};
