import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as l,c as i,a as e,b as o,d as n,e as s}from"./app-002cceec.js";const d={},c=e("h1",{id:"mysql-常见问题",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#mysql-常见问题","aria-hidden":"true"},"#"),o(" Mysql 常见问题")],-1),p={href:"https://github.com/dunwu/db-tutorial/",target:"_blank",rel:"noopener noreferrer"},_=s('<h2 id="为什么表数据删掉一半-表文件大小不变" tabindex="-1"><a class="header-anchor" href="#为什么表数据删掉一半-表文件大小不变" aria-hidden="true">#</a> 为什么表数据删掉一半，表文件大小不变</h2><p>【问题】数据库占用空间太大，我把一个最大的表删掉了一半的数据，怎么表文件的大小还是没变？</p><p>表数据既可以存在共享表空间里，也可以是单独的文件。这个行为是由参数 <code>innodb_file_per_table</code> 控制的：</p><ol><li>这个参数设置为 OFF 表示的是，表的数据放在系统共享表空间，也就是跟数据字典放在一起；</li><li>这个参数设置为 ON 表示的是，每个 InnoDB 表数据存储在一个以 .ibd 为后缀的文件中。</li></ol><p>从 MySQL 5.6.6 版本开始，它的默认值就是 ON 了。</p><p>我建议你不论使用 MySQL 的哪个版本，都将这个值设置为 ON。因为，一个表单独存储为一个文件更容易管理，而且在你不需要这个表的时候，通过 drop table 命令，系统就会直接删除这个文件。而如果是放在共享表空间中，即使表删掉了，空间也是不会回收的。</p><p>所以，<strong>将 innodb_file_per_table 设置为 ON，是推荐做法，我们接下来的讨论都是基于这个设置展开的。</strong></p><p>我们在删除整个表的时候，可以使用 drop table 命令回收表空间。但是，我们遇到的更多的删除数据的场景是删除某些行，这时就遇到了我们文章开头的问题：表中的数据被删除了，但是表空间却没有被回收。</p><p><strong>插入和删除操作可能会造成空洞</strong>。</p><ul><li>插入时，如果插入位置所在页已满，需要申请新页面。</li><li>删除时，不会删除所在页，而是将记录在页面的位置标记为可重用。</li></ul><p>所以，如果能够把这些空洞去掉，就能达到收缩表空间的目的。</p><p>要达到收缩空洞的目的，可以使用重建表的方式。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>',13),h={href:"https://book.douban.com/subject/23008813/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://time.geekbang.org/column/intro/139",target:"_blank",rel:"noopener noreferrer"};function b(f,m){const r=a("ExternalLinkIcon");return l(),i("div",null,[c,e("blockquote",null,[e("p",null,[e("strong",null,[o("📦 本文以及示例源码已归档在 "),e("a",p,[o("db-tutorial"),n(r)])])])]),_,e("ul",null,[e("li",null,[e("a",h,[o("《高性能 MySQL》"),n(r)])]),e("li",null,[e("a",u,[o("MySQL 实战 45 讲"),n(r)])])])])}const k=t(d,[["render",b],["__file","index.html.vue"]]);export{k as default};
