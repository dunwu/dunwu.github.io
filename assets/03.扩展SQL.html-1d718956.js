import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o,c as p,a as s,b as t,d as r,e as l}from"./app-29bcd084.js";const c={},d=l(`<h1 id="扩展-sql" tabindex="-1"><a class="header-anchor" href="#扩展-sql" aria-hidden="true">#</a> 扩展 SQL</h1><h2 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库" aria-hidden="true">#</a> 数据库</h2><h2 id="表" tabindex="-1"><a class="header-anchor" href="#表" aria-hidden="true">#</a> 表</h2><h3 id="查看表的基本信息" tabindex="-1"><a class="header-anchor" href="#查看表的基本信息" aria-hidden="true">#</a> 查看表的基本信息</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token string">&#39;test&#39;</span> <span class="token operator">AND</span> table_name <span class="token operator">=</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看表的列信息" tabindex="-1"><a class="header-anchor" href="#查看表的列信息" aria-hidden="true">#</a> 查看表的列信息</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token string">&#39;test&#39;</span> <span class="token operator">AND</span> table_name <span class="token operator">=</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如何批量删除大量数据" tabindex="-1"><a class="header-anchor" href="#如何批量删除大量数据" aria-hidden="true">#</a> 如何批量删除大量数据</h3><p>如果要根据时间范围批量删除大量数据，最简单的语句如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">delete</span> <span class="token keyword">from</span> orders
<span class="token keyword">where</span> <span class="token keyword">timestamp</span> <span class="token operator">&lt;</span> SUBDATE<span class="token punctuation">(</span>CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">3</span> <span class="token keyword">month</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的语句，大概率执行会报错，提示删除失败，因为需要删除的数据量太大了，所以需要分批删除。</p><p>可以先通过一次查询，找到符合条件的历史订单中最大的那个订单 ID，然后在删除语句中把删除的条件转换成按主键删除。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">from</span> orders
<span class="token keyword">where</span> <span class="token keyword">timestamp</span> <span class="token operator">&lt;</span> SUBDATE<span class="token punctuation">(</span>CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">3</span> <span class="token keyword">month</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 分批删除，? 填上一条语句查到的最大 ID</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> orders
<span class="token keyword">where</span> id <span class="token operator">&lt;=</span> ?
<span class="token keyword">order</span> <span class="token keyword">by</span> id <span class="token keyword">limit</span> <span class="token number">1000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改表的编码格式" tabindex="-1"><a class="header-anchor" href="#修改表的编码格式" aria-hidden="true">#</a> 修改表的编码格式</h3><p>utf8mb4 编码是 utf8 编码的超集，兼容 utf8，并且能存储 4 字节的表情字符。如果表的编码指定为 utf8，在保存 emoji 字段时会报错。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>tableName<span class="token operator">&gt;</span> <span class="token keyword">CONVERT</span> <span class="token keyword">TO</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8mb4 <span class="token keyword">COLLATE</span> utf8mb4_general_ci<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><h3 id="显示哪些线程正在运行" tabindex="-1"><a class="header-anchor" href="#显示哪些线程正在运行" aria-hidden="true">#</a> 显示哪些线程正在运行</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">show</span> processlist<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----+-----------------+-----------------+------+---------+-------+------------------------+------------------+</span>
<span class="token operator">|</span> Id <span class="token operator">|</span> <span class="token keyword">User</span>            <span class="token operator">|</span> Host            <span class="token operator">|</span> db   <span class="token operator">|</span> Command <span class="token operator">|</span> <span class="token keyword">Time</span>  <span class="token operator">|</span> State                  <span class="token operator">|</span> Info             <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----+-----------------+-----------------+------+---------+-------+------------------------+------------------+</span>
<span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> event_scheduler <span class="token operator">|</span> localhost       <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> Daemon  <span class="token operator">|</span> <span class="token number">40230</span> <span class="token operator">|</span> Waiting <span class="token keyword">on</span> empty queue <span class="token operator">|</span> <span class="token boolean">NULL</span>             <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token number">10</span> <span class="token operator">|</span> root            <span class="token operator">|</span> localhost:<span class="token number">10120</span> <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> Query   <span class="token operator">|</span>     <span class="token number">0</span> <span class="token operator">|</span> init                   <span class="token operator">|</span> <span class="token keyword">show</span> processlist <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----+-----------------+-----------------+------+---------+-------+------------------------+------------------+</span>
<span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Mysql 连接完成后，如果你没有后续的动作，这个连接就处于空闲状态，你可以在 <code>show processlist</code> 命令中看到它。其中的 Command 列显示为“Sleep”的这一行，就表示现在系统里面有一个空闲连接。客户端如果太长时间没动静，连接器就会自动将它断开。这个时间是由参数 wait_timeout 控制的，默认值是 8 小时。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,21),i={href:"https://book.douban.com/subject/35167240/",target:"_blank",rel:"noopener noreferrer"};function k(u,m){const a=e("ExternalLinkIcon");return o(),p("div",null,[d,s("ul",null,[s("li",null,[s("a",i,[t("《SQL 必知必会》"),r(a)])])])])}const v=n(c,[["render",k],["__file","03.扩展SQL.html.vue"]]);export{v as default};
