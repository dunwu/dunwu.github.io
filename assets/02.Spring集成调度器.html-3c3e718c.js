const e=JSON.parse('{"key":"v-2eb1e77a","path":"/01.Java/13.%E6%A1%86%E6%9E%B6/01.Spring/05.Spring%E9%9B%86%E6%88%90/02.Spring%E9%9B%86%E6%88%90%E8%B0%83%E5%BA%A6%E5%99%A8.html","title":"Spring 集成调度器","lang":"zh-CN","frontmatter":{"title":"Spring 集成调度器","date":"2017-11-08T16:53:27.000Z","order":2,"category":["Java","框架","Spring","Spring集成"],"tag":["Java","框架","Spring","集成","调度器"],"description":"Spring 集成调度器 概述 如果想在 Spring 中使用任务调度功能，除了集成调度框架 Quartz 这种方式，也可以使用 Spring 自己的调度任务框架。 使用 Spring 的调度框架，优点是：支持注解@Scheduler，可以省去大量的配置。 实时触发调度任务 TaskScheduler 接口 Spring3 引入了TaskScheduler接口，这个接口定义了调度任务的抽象方法。 TaskScheduler 接口的声明：","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/01.Java/13.%E6%A1%86%E6%9E%B6/01.Spring/05.Spring%E9%9B%86%E6%88%90/02.Spring%E9%9B%86%E6%88%90%E8%B0%83%E5%BA%A6%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Spring 集成调度器"}],["meta",{"property":"og:description","content":"Spring 集成调度器 概述 如果想在 Spring 中使用任务调度功能，除了集成调度框架 Quartz 这种方式，也可以使用 Spring 自己的调度任务框架。 使用 Spring 的调度框架，优点是：支持注解@Scheduler，可以省去大量的配置。 实时触发调度任务 TaskScheduler 接口 Spring3 引入了TaskScheduler接口，这个接口定义了调度任务的抽象方法。 TaskScheduler 接口的声明："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-11T15:44:18.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"框架"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"集成"}],["meta",{"property":"article:tag","content":"调度器"}],["meta",{"property":"article:published_time","content":"2017-11-08T16:53:27.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-11T15:44:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring 集成调度器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2017-11-08T16:53:27.000Z\\",\\"dateModified\\":\\"2023-09-11T15:44:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"实时触发调度任务","slug":"实时触发调度任务","link":"#实时触发调度任务","children":[{"level":3,"title":"TaskScheduler 接口","slug":"taskscheduler-接口","link":"#taskscheduler-接口","children":[]},{"level":3,"title":"@Scheduler 的使用方法","slug":"scheduler-的使用方法","link":"#scheduler-的使用方法","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1694447058000,"updatedTime":1694447058000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":6.67,"words":2000},"filePathRelative":"01.Java/13.框架/01.Spring/05.Spring集成/02.Spring集成调度器.md","localizedDate":"2017年11月8日","excerpt":"<h1> Spring 集成调度器</h1>\\n<h2> 概述</h2>\\n<p>如果想在 Spring 中使用任务调度功能，除了集成调度框架 Quartz 这种方式，也可以使用 Spring 自己的调度任务框架。<br>\\n使用 Spring 的调度框架，优点是：支持注解<code>@Scheduler</code>，可以省去大量的配置。</p>\\n<h2> 实时触发调度任务</h2>\\n<h3> TaskScheduler 接口</h3>\\n<p>Spring3 引入了<code>TaskScheduler</code>接口，这个接口定义了调度任务的抽象方法。<br>\\nTaskScheduler 接口的声明：</p>","autoDesc":true}');export{e as data};
