import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,a as n,b as s,d as t,e}from"./app-2793f0f0.js";const u={},p=n("h1",{id:"logstash-运维",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#logstash-运维","aria-hidden":"true"},"#"),s(" Logstash 运维")],-1),d={href:"https://github.com/elastic/logstash",target:"_blank",rel:"noopener noreferrer"},r=n("h2",{id:"_1-安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-安装","aria-hidden":"true"},"#"),s(" 1. 安装")],-1),g=n("h3",{id:"_1-1-安装步骤",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-安装步骤","aria-hidden":"true"},"#"),s(" 1.1. 安装步骤")],-1),h=n("p",null,"安装步骤如下：",-1),v={href:"https://www.elastic.co/downloads/logstash",target:"_blank",rel:"noopener noreferrer"},b=e(`<p>（2）添加一个 <code>logstash.conf</code> 文件，指定要使用的插件以及每个插件的设置。举个简单的例子：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>input { stdin { } }
output {
  elasticsearch { hosts =&gt; [&quot;localhost:9200&quot;] }
  stdout { codec =&gt; rubydebug }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）运行 <code>bin/logstash -f logstash.conf</code> （Windows 上运行<code>bin/logstash.bat -f logstash.conf</code>）</p><h2 id="_2-配置" tabindex="-1"><a class="header-anchor" href="#_2-配置" aria-hidden="true">#</a> 2. 配置</h2><h3 id="_2-1-设置文件" tabindex="-1"><a class="header-anchor" href="#_2-1-设置文件" aria-hidden="true">#</a> 2.1. 设置文件</h3><ul><li><strong><code>logstash.yml</code></strong>：logstash 的默认启动配置文件</li><li><strong><code>jvm.options</code></strong>：logstash 的 JVM 配置文件。</li><li><strong><code>startup.options</code></strong> (Linux)：包含系统安装脚本在 <code>/usr/share/logstash/bin</code> 中使用的选项为您的系统构建适当的启动脚本。安装 Logstash 软件包时，系统安装脚本将在安装过程结束时执行，并使用 <code>startup.options</code> 中指定的设置来设置用户，组，服务名称和服务描述等选项。</li></ul><h3 id="_2-2-logstash-yml-设置项" tabindex="-1"><a class="header-anchor" href="#_2-2-logstash-yml-设置项" aria-hidden="true">#</a> 2.2. logstash.yml 设置项</h3>`,7),k={href:"https://www.elastic.co/guide/en/logstash/current/logstash-settings-file.html",target:"_blank",rel:"noopener noreferrer"},m=n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",null,"描述"),n("th",null,"默认值")])],-1),_=n("tr",null,[n("td",null,[n("code",null,"node.name")]),n("td",null,"节点名"),n("td",null,"机器的主机名")],-1),f=n("tr",null,[n("td",null,[n("code",null,"path.data")]),n("td",null,"Logstash 及其插件用于任何持久性需求的目录。"),n("td",null,[n("code",null,"LOGSTASH_HOME/data")])],-1),x=n("tr",null,[n("td",null,[n("code",null,"pipeline.workers")]),n("td",null,"同时执行管道的过滤器和输出阶段的工作任务数量。如果发现事件正在备份，或 CPU 未饱和，请考虑增加此数字以更好地利用机器处理能力。"),n("td",null,"Number of the host’s CPU cores")],-1),q=n("tr",null,[n("td",null,[n("code",null,"pipeline.batch.size")]),n("td",null,[s("尝试执行过滤器和输出之前，单个工作线程从输入收集的最大事件数量。较大的批量处理大小一般来说效率更高，但是以增加的内存开销为代价。您可能必须通过设置 "),n("code",null,"LS_HEAP_SIZE"),s(" 变量来有效使用该选项来增加 JVM 堆大小。")]),n("td",null,[n("code",null,"125")])],-1),w=n("tr",null,[n("td",null,[n("code",null,"pipeline.batch.delay")]),n("td",null,"创建管道事件批处理时，在将一个尺寸过小的批次发送给管道工作任务之前，等待每个事件需要多长时间（毫秒）。"),n("td",null,[n("code",null,"5")])],-1),y=n("tr",null,[n("td",null,[n("code",null,"pipeline.unsafe_shutdown")]),n("td",null,"如果设置为 true，则即使在内存中仍存在 inflight 事件时，也会强制 Logstash 在关闭期间退出。默认情况下，Logstash 将拒绝退出，直到所有接收到的事件都被推送到输出。启用此选项可能会导致关机期间数据丢失。"),n("td",null,[n("code",null,"false")])],-1),L=n("td",null,[n("code",null,"path.config")],-1),P=n("td",null,"主管道的 Logstash 配置路径。如果您指定一个目录或通配符，配置文件将按字母顺序从目录中读取。",-1),j={href:"https://github.com/elastic/logstash/blob/6.1/docs/static/settings-file.asciidoc#dir-layout",target:"_blank",rel:"noopener noreferrer"},I=n("tr",null,[n("td",null,[n("code",null,"config.string")]),n("td",null,"包含用于主管道的管道配置的字符串。使用与配置文件相同的语法。"),n("td",null,"None")],-1),E=n("tr",null,[n("td",null,[n("code",null,"config.test_and_exit")]),n("td",null,"设置为 true 时，检查配置是否有效，然后退出。请注意，使用此设置不会检查 grok 模式的正确性。 Logstash 可以从目录中读取多个配置文件。如果将此设置与 log.level：debug 结合使用，则 Logstash 将记录组合的配置文件，并注掉其源文件的配置块。"),n("td",null,[n("code",null,"false")])],-1),S=n("tr",null,[n("td",null,[n("code",null,"config.reload.automatic")]),n("td",null,"设置为 true 时，定期检查配置是否已更改，并在配置更改时重新加载配置。这也可以通过 SIGHUP 信号手动触发。"),n("td",null,[n("code",null,"false")])],-1),C=n("tr",null,[n("td",null,[n("code",null,"config.reload.interval")]),n("td",null,"Logstash 检查配置文件更改的时间间隔。"),n("td",null,[n("code",null,"3s")])],-1),J=n("tr",null,[n("td",null,[n("code",null,"config.debug")]),n("td",null,[s("设置为 true 时，将完全编译的配置显示为调试日志消息。您还必须设置"),n("code",null,"log.level：debug"),s("。警告：日志消息将包括任何传递给插件配置作为明文的“密码”选项，并可能导致明文密码出现在您的日志！")]),n("td",null,[n("code",null,"false")])],-1),T=n("tr",null,[n("td",null,[n("code",null,"config.support_escapes")]),n("td",null,"当设置为 true 时，带引号的字符串将处理转义字符。"),n("td",null,[n("code",null,"false")])],-1),A=n("tr",null,[n("td",null,[n("code",null,"modules")]),n("td",null,"配置时，模块必须处于上表所述的嵌套 YAML 结构中。"),n("td",null,"None")],-1),N=n("tr",null,[n("td",null,[n("code",null,"http.host")]),n("td",null,"绑定地址"),n("td",null,[n("code",null,'"127.0.0.1"')])],-1),U=n("tr",null,[n("td",null,[n("code",null,"http.port")]),n("td",null,"绑定端口"),n("td",null,[n("code",null,"9600")])],-1),K=n("tr",null,[n("td",null,[n("code",null,"log.level")]),n("td",null,"日志级别。有效选项：fatal > error > warn > info > debug > trace"),n("td",null,[n("code",null,"info")])],-1),D=n("tr",null,[n("td",null,[n("code",null,"log.format")]),n("td",null,"日志格式。json （JSON 格式）或 plain （原对象）"),n("td",null,[n("code",null,"plain")])],-1),O=n("tr",null,[n("td",null,[n("code",null,"path.logs")]),n("td",null,"Logstash 自身日志的存储路径"),n("td",null,[n("code",null,"LOGSTASH_HOME/logs")])],-1),B=n("tr",null,[n("td",null,[n("code",null,"path.plugins")]),n("td",null,"在哪里可以找到自定义的插件。您可以多次指定此设置以包含多个路径。"),n("td")],-1),F=e(`<h2 id="_3-启动" tabindex="-1"><a class="header-anchor" href="#_3-启动" aria-hidden="true">#</a> 3. 启动</h2><h3 id="_3-1-命令行" tabindex="-1"><a class="header-anchor" href="#_3-1-命令行" aria-hidden="true">#</a> 3.1. 命令行</h3><p>通过命令行启动 logstash 的方式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bin/logstash [options]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中 <code>options</code> 是您可以指定用于控制 Logstash 执行的命令行标志。</p><p>在命令行上设置的任何标志都会覆盖 Logstash 设置文件（<code>logstash.yml</code>）中的相应设置，但设置文件本身不会更改。</p>`,6),H=n("p",null,[n("strong",null,"注")],-1),M=n("p",null,"虽然可以通过指定命令行参数的方式，来控制 logstash 的运行方式，但显然这么做很麻烦。",-1),R=n("p",null,"建议通过指定配置文件的方式，来控制 logstash 运行，启动命令如下：",-1),V=n("div",{class:"language-text line-numbers-mode","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,`bin/logstash -f logstash.conf
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),G={href:"https://www.elastic.co/guide/en/logstash/current/running-logstash-command-line.html",target:"_blank",rel:"noopener noreferrer"},W=e(`<h3 id="_3-2-配置文件" tabindex="-1"><a class="header-anchor" href="#_3-2-配置文件" aria-hidden="true">#</a> 3.2. 配置文件</h3><p>上节，我们了解到，logstash 可以执行 <code>bin/logstash -f logstash.conf</code> ，按照配置文件中的参数去覆盖默认设置文件（<code>logstash.yml</code>）中的设置。</p><p>这节，我们就来学习一下这个配置文件如何配置参数。</p><h4 id="_3-2-1-配置文件结构" tabindex="-1"><a class="header-anchor" href="#_3-2-1-配置文件结构" aria-hidden="true">#</a> 3.2.1. 配置文件结构</h4><p>在工作原理一节中，我们已经知道了 Logstash 主要有三个工作阶段 input 、filter、output。而 logstash 配置文件文件结构也与之相对应：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>input {}

filter {}

output {}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>每个部分都包含一个或多个插件的配置选项。如果指定了多个过滤器，则会按照它们在配置文件中的显示顺序应用它们。</p></blockquote><h4 id="_3-2-2-插件配置" tabindex="-1"><a class="header-anchor" href="#_3-2-2-插件配置" aria-hidden="true">#</a> 3.2.2. 插件配置</h4><p>插件的配置由插件名称和插件的一个设置块组成。</p><p>下面的例子中配置了两个输入文件配置：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>input {
  file {
    path =&gt; &quot;/var/log/messages&quot;
    type =&gt; &quot;syslog&quot;
  }

  file {
    path =&gt; &quot;/var/log/apache/access.log&quot;
    type =&gt; &quot;apache&quot;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),z={href:"https://www.elastic.co/guide/en/logstash/current/input-plugins.html",target:"_blank",rel:"noopener noreferrer"},$={href:"https://www.elastic.co/guide/en/logstash/current/output-plugins.html",target:"_blank",rel:"noopener noreferrer"},X={href:"https://www.elastic.co/guide/en/logstash/current/filter-plugins.html",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://www.elastic.co/guide/en/logstash/current/codec-plugins.html",target:"_blank",rel:"noopener noreferrer"},Z=e(`<h4 id="_3-2-3-值类型" tabindex="-1"><a class="header-anchor" href="#_3-2-3-值类型" aria-hidden="true">#</a> 3.2.3. 值类型</h4><p>一个插件可以要求设置的值是一个特定的类型，比如布尔值，列表或哈希值。以下值类型受支持。</p><ul><li>Array</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  users =&gt; [ {id =&gt; 1, name =&gt; bob}, {id =&gt; 2, name =&gt; jane} ]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Lists</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  path =&gt; [ &quot;/var/log/messages&quot;, &quot;/var/log/*.log&quot; ]
  uris =&gt; [ &quot;http://elastic.co&quot;, &quot;http://example.net&quot; ]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Boolean</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  ssl_enable =&gt; true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Bytes</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  my_bytes =&gt; &quot;1113&quot;   # 1113 bytes
  my_bytes =&gt; &quot;10MiB&quot;  # 10485760 bytes
  my_bytes =&gt; &quot;100kib&quot; # 102400 bytes
  my_bytes =&gt; &quot;180 mb&quot; # 180000000 bytes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Codec</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  codec =&gt; &quot;json&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Hash</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>match =&gt; {
  &quot;field1&quot; =&gt; &quot;value1&quot;
  &quot;field2&quot; =&gt; &quot;value2&quot;
  ...
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Number</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  port =&gt; 33
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Password</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  my_password =&gt; &quot;password&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>URI</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  my_uri =&gt; &quot;http://foo:bar@example.net&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Path</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  my_path =&gt; &quot;/tmp/logstash&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>String</p></li><li><p>转义字符</p></li></ul><h2 id="_4-插件" tabindex="-1"><a class="header-anchor" href="#_4-插件" aria-hidden="true">#</a> 4. 插件</h2><h3 id="_4-1-input" tabindex="-1"><a class="header-anchor" href="#_4-1-input" aria-hidden="true">#</a> 4.1. input</h3><blockquote><p>Logstash 支持各种输入选择 ，可以在同一时间从众多常用来源捕捉事件。能够以连续的流式传输方式，轻松地从您的日志、指标、Web 应用、数据存储以及各种 AWS 服务采集数据。</p></blockquote><h4 id="_4-1-1-常用-input-插件" tabindex="-1"><a class="header-anchor" href="#_4-1-1-常用-input-插件" aria-hidden="true">#</a> 4.1.1. 常用 input 插件</h4><ul><li><strong>file</strong>：从文件系统上的文件读取，就像 UNIX 命令 <code>tail -0F</code> 一样</li><li>**syslog：**在众所周知的端口 514 上侦听系统日志消息，并根据 RFC3164 格式进行解析</li><li>**redis：**从 redis 服务器读取，使用 redis 通道和 redis 列表。 Redis 经常用作集中式 Logstash 安装中的“代理”，它将来自远程 Logstash“托运人”的 Logstash 事件排队。</li><li>**beats：**处理由 Filebeat 发送的事件。</li></ul>`,28),Q={href:"https://www.elastic.co/guide/en/logstash/current/input-plugins.html",target:"_blank",rel:"noopener noreferrer"},nn=e('<h3 id="_4-2-filter" tabindex="-1"><a class="header-anchor" href="#_4-2-filter" aria-hidden="true">#</a> 4.2. filter</h3><blockquote><p>过滤器是 Logstash 管道中的中间处理设备。如果符合特定条件，您可以将条件过滤器组合在一起，对事件执行操作。</p></blockquote><h4 id="_4-2-1-常用-filter-插件" tabindex="-1"><a class="header-anchor" href="#_4-2-1-常用-filter-插件" aria-hidden="true">#</a> 4.2.1. 常用 filter 插件</h4><ul><li><p>**grok：**解析和结构任意文本。 Grok 目前是 Logstash 中将非结构化日志数据解析为结构化和可查询的最佳方法。</p></li><li><p>**mutate：**对事件字段执行一般转换。您可以重命名，删除，替换和修改事件中的字段。</p></li><li><p>**drop：**完全放弃一个事件，例如调试事件。</p></li><li><p>**clone：**制作一个事件的副本，可能会添加或删除字段。</p></li><li><p>**geoip：**添加有关 IP 地址的地理位置的信息（也可以在 Kibana 中显示惊人的图表！）</p></li></ul>',4),sn={href:"https://www.elastic.co/guide/en/logstash/current/filter-plugins.html",target:"_blank",rel:"noopener noreferrer"},an=n("h3",{id:"_4-3-output",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-3-output","aria-hidden":"true"},"#"),s(" 4.3. output")],-1),tn=n("blockquote",null,[n("p",null,"输出是 Logstash 管道的最后阶段。一个事件可以通过多个输出，但是一旦所有输出处理完成，事件就完成了执行。")],-1),en=n("h4",{id:"_4-3-1-常用-output-插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-3-1-常用-output-插件","aria-hidden":"true"},"#"),s(" 4.3.1. 常用 output 插件")],-1),ln=n("li",null,"**elasticsearch：**将事件数据发送给 Elasticsearch（推荐模式）。",-1),on=n("li",null,"**file：**将事件数据写入文件或磁盘。",-1),cn={href:"http://graphite.readthedocs.io/en/latest/%EF%BC%89%E3%80%82",target:"_blank",rel:"noopener noreferrer"},un=n("li",null,"**statsd：**将事件数据发送到 statsd （这是一种侦听统计数据的服务，如计数器和定时器，通过 UDP 发送并将聚合发送到一个或多个可插入的后端服务）。",-1),pn={href:"https://www.elastic.co/guide/en/logstash/current/output-plugins.html",target:"_blank",rel:"noopener noreferrer"},dn=n("h3",{id:"_4-4-codec",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-4-codec","aria-hidden":"true"},"#"),s(" 4.4. codec")],-1),rn=n("p",null,"用于格式化对应的内容。",-1),gn=n("h4",{id:"_4-4-1-常用-codec-插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-4-1-常用-codec-插件","aria-hidden":"true"},"#"),s(" 4.4.1. 常用 codec 插件")],-1),hn=n("ul",null,[n("li",null,"**json：**以 JSON 格式对数据进行编码或解码。"),n("li",null,"**multiline：**将多行文本事件（如 java 异常和堆栈跟踪消息）合并为单个事件。")],-1),vn={href:"https://www.elastic.co/guide/en/logstash/current/codec-plugins.html",target:"_blank",rel:"noopener noreferrer"},bn=e(`<h2 id="_5-实战" tabindex="-1"><a class="header-anchor" href="#_5-实战" aria-hidden="true">#</a> 5. 实战</h2><p>前面的内容都是对 Logstash 的介绍和原理说明。接下来，我们来实战一些常见的应用场景。</p><h3 id="_5-1-传输控制台数据" tabindex="-1"><a class="header-anchor" href="#_5-1-传输控制台数据" aria-hidden="true">#</a> 5.1. 传输控制台数据</h3><blockquote><p>stdin input 插件从标准输入读取事件。这是最简单的 input 插件，一般用于测试场景。</p></blockquote><p><strong>应用</strong></p><p>（1）创建 <code>logstash-input-stdin.conf</code> ：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>input { stdin { } }
output {
  elasticsearch { hosts =&gt; [&quot;localhost:9200&quot;] }
  stdout { codec =&gt; rubydebug }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),kn={href:"https://www.elastic.co/guide/en/logstash/current/plugins-inputs-stdin.html",target:"_blank",rel:"noopener noreferrer"},mn=e(`<p>（2）执行 logstash，使用 <code>-f</code> 来指定你的配置文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bin/logstash -f logstash-input-stdin.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-2-传输-logback-日志" tabindex="-1"><a class="header-anchor" href="#_5-2-传输-logback-日志" aria-hidden="true">#</a> 5.2. 传输 logback 日志</h3>`,3),_n=n("p",null,"elk 默认使用的 Java 日志工具是 log4j2 ，并不支持 logback 和 log4j。",-1),fn={href:"https://github.com/logstash/logstash-logback-encoder",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://github.com/logstash/logstash-logback-encoder",target:"_blank",rel:"noopener noreferrer"},qn={href:"https://github.com/dunwu/JavaStack/blob/master/docs/javalib/java-log.md",target:"_blank",rel:"noopener noreferrer"},wn=e(`<h4 id="_5-2-1-tcp-应用" tabindex="-1"><a class="header-anchor" href="#_5-2-1-tcp-应用" aria-hidden="true">#</a> 5.2.1. TCP 应用</h4><p>logstash 配置：</p><p>（1）创建 <code>logstash-input-tcp.conf</code> ：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>input {
  # stdin { }
  tcp {
    # host:port就是上面appender中的 destination，
 # 这里其实把logstash作为服务，开启9250端口接收logback发出的消息
    host =&gt; &quot;127.0.0.1&quot; port =&gt; 9250 mode =&gt; &quot;server&quot; tags =&gt; [&quot;tags&quot;] codec =&gt; json_lines
  }
}
output {
  elasticsearch { hosts =&gt; [&quot;localhost:9200&quot;] }
  stdout { codec =&gt; rubydebug }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),yn={href:"https://www.elastic.co/guide/en/logstash/current/plugins-inputs-tcp.html",target:"_blank",rel:"noopener noreferrer"},Ln=e(`<p>（2）执行 logstash，使用 <code>-f</code> 来指定你的配置文件：<code>bin/logstash -f logstash-input-udp.conf</code></p><p>java 应用配置：</p><p>（1）在 Java 应用的 pom.xml 中引入 jar 包：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>net.logstash.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logstash-logback-encoder<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- logback 依赖包 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>ch.qos.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logback-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>ch.qos.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logback-classic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>ch.qos.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logback-access<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）接着，在 logback.xml 中添加 appender</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ELK-TCP<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.appender.LogstashTcpSocketAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
 <span class="token comment">&lt;!--
 destination 是 logstash 服务的 host:port，
 相当于和 logstash 建立了管道，将日志数据定向传输到 logstash
 --&gt;</span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>destination</span><span class="token punctuation">&gt;</span></span>192.168.28.32:9251<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>destination</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.encoder.LogstashEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>io.github.dunwu.spring<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TRACE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">additivity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ELK-TCP<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>大功告成，此后，<code>io.github.dunwu.spring</code> 包中的 TRACE 及以上级别的日志信息都会被定向输出到 logstash 服务。</p><figure><img src="http://upload-images.jianshu.io/upload_images/3101171-cd876d79a14955b0.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>`,8),Pn={href:"https://github.com/dunwu/JavaStack/blob/master/docs/javalib/java-log.md",target:"_blank",rel:"noopener noreferrer"},jn=n("strong",null,"实例：",-1),In={href:"https://github.com/dunwu/JavaStack/blob/master/codes/javatool/src/main/resources/logback.xml",target:"_blank",rel:"noopener noreferrer"},En=e(`<h4 id="_5-2-2-udp-应用" tabindex="-1"><a class="header-anchor" href="#_5-2-2-udp-应用" aria-hidden="true">#</a> 5.2.2. UDP 应用</h4><p>UDP 和 TCP 的使用方式大同小异。</p><p>logstash 配置：</p><p>（1）创建 <code>logstash-input-udp.conf</code> ：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>input {
udp {
  port =&gt; 9250
  codec =&gt; json
}
}
output {
 elasticsearch { hosts =&gt; [&quot;localhost:9200&quot;] }
 stdout { codec =&gt; rubydebug }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Sn={href:"https://www.elastic.co/guide/en/logstash/current/plugins-inputs-udp.html",target:"_blank",rel:"noopener noreferrer"},Cn=e(`<p>（2）执行 logstash，使用 <code>-f</code> 来指定你的配置文件：<code>bin/logstash -f logstash-input-udp.conf</code></p><p>java 应用配置：</p><p>（1）在 Java 应用的 pom.xml 中引入 jar 包：</p><p>与 <strong>TCP 应用</strong> 一节中的引入依赖包完全相同。</p><p>（2）接着，在 logback.xml 中添加 appender</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ELK-UDP<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.appender.LogstashSocketAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host</span><span class="token punctuation">&gt;</span></span>192.168.28.32<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>host</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span><span class="token punctuation">&gt;</span></span>9250<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>io.github.dunwu.spring<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TRACE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">additivity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ELK-UDP<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),Jn={href:"https://github.com/dunwu/JavaStack/blob/master/docs/javalib/java-log.md",target:"_blank",rel:"noopener noreferrer"},Tn=n("strong",null,"实例：",-1),An={href:"https://github.com/dunwu/JavaStack/blob/master/codes/javatool/src/main/resources/logback.xml",target:"_blank",rel:"noopener noreferrer"},Nn=e(`<h3 id="_5-3-传输文件" tabindex="-1"><a class="header-anchor" href="#_5-3-传输文件" aria-hidden="true">#</a> 5.3. 传输文件</h3><blockquote><p>在 Java Web 领域，需要用到一些重要的工具，例如 Tomcat 、Nginx 、Mysql 等。这些不属于业务应用，但是它们的日志数据对于定位问题、分析统计同样很重要。这时无法使用 logback 方式将它们的日志传输到 logstash。</p><p>如何采集这些日志文件呢？别急，你可以使用 logstash 的 file input 插件。</p><p>需要注意的是，传输文件这种方式，必须在日志所在的机器上部署 logstash 。</p></blockquote><p><strong>应用</strong></p><p>logstash 配置</p><p>（1）创建 <code>logstash-input-file.conf</code> ：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>input {
 file {
  path =&gt; [&quot;/var/log/nginx/access.log&quot;]
  type =&gt; &quot;nginx-access-log&quot;
  start_position =&gt; &quot;beginning&quot;
 }
}

output {
 if [type] == &quot;nginx-access-log&quot; {
  elasticsearch {
   hosts =&gt; [&quot;localhost:9200&quot;]
   index =&gt; &quot;nginx-access-log&quot;
  }
 }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）执行 logstash，使用 <code>-f</code> 来指定你的配置文件：<code>bin/logstash -f logstash-input-file.conf</code></p>`,7),Un={href:"https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html",target:"_blank",rel:"noopener noreferrer"},Kn=e(`<h2 id="_6-小技巧" tabindex="-1"><a class="header-anchor" href="#_6-小技巧" aria-hidden="true">#</a> 6. 小技巧</h2><h3 id="_6-1-启动、终止应用" tabindex="-1"><a class="header-anchor" href="#_6-1-启动、终止应用" aria-hidden="true">#</a> 6.1. 启动、终止应用</h3><p>如果你的 logstash 每次都是通过指定配置文件方式启动。不妨建立一个启动脚本。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># cd xxx 进入 logstash 安装目录下的 bin 目录
logstash -f logstash.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你的 logstash 运行在 linux 系统下，不妨使用 nohup 来启动一个守护进程。这样做的好处在于，即使关闭终端，应用仍会运行。</p>`,5),Dn={href:"http://startup.sh",target:"_blank",rel:"noopener noreferrer"},On=n("div",{class:"language-text line-numbers-mode","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,`nohup ./logstash -f logstash.conf >> nohup.out 2>&1 &
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Bn=n("p",null,"终止应用没有什么好方法，你只能使用 ps -ef | grep logstash ，查出进程，将其 kill 。不过，我们可以写一个脚本来干这件事：",-1),Fn={href:"http://shutdown.sh",target:"_blank",rel:"noopener noreferrer"},Hn=e('<p>脚本不多解释，请自行领会作用。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>PID=`ps -ef | grep logstash | awk &#39;{ print $2}&#39; | head -n 1`\nkill -9 ${PID}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-参考资料" tabindex="-1"><a class="header-anchor" href="#_7-参考资料" aria-hidden="true">#</a> 7. 参考资料</h2>',3),Mn={href:"https://www.elastic.co/cn/products/logstash",target:"_blank",rel:"noopener noreferrer"},Rn={href:"https://github.com/elastic/logstash",target:"_blank",rel:"noopener noreferrer"},Vn={href:"https://www.elastic.co/guide/en/logstash/current/index.html",target:"_blank",rel:"noopener noreferrer"},Gn={href:"https://github.com/logstash/logstash-logback-encoder",target:"_blank",rel:"noopener noreferrer"},Wn={href:"https://github.com/chenryn/logstash-best-practice-cn",target:"_blank",rel:"noopener noreferrer"},zn={href:"https://github.com/judasn/Linux-Tutorial/blob/master/ELK-Install-And-Settings.md",target:"_blank",rel:"noopener noreferrer"};function $n(Xn,Yn){const a=o("ExternalLinkIcon");return i(),c("div",null,[p,n("blockquote",null,[n("p",null,[n("a",d,[s("Logstash"),t(a)]),s(" 是开源的服务器端数据处理管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存储库”中。")])]),r,g,h,n("p",null,[s("（1）在 "),n("a",v,[s("logstash 官方下载地址"),t(a)]),s("下载所需版本包并解压到本地。")]),b,n("p",null,[s("节选部分设置项，更多项请参考："),n("a",k,[s("https://www.elastic.co/guide/en/logstash/current/logstash-settings-file.html"),t(a)])]),n("table",null,[m,n("tbody",null,[_,f,x,q,w,y,n("tr",null,[L,P,n("td",null,[s("Platform-specific. See ["),n("a",j,[s("dir-layout]"),t(a)]),s(".")])]),I,E,S,C,J,T,A,N,U,K,D,O,B])]),F,n("blockquote",null,[H,M,R,V,n("p",null,[s("若想了解更多的命令行参数细节，请参考："),n("a",G,[s("https://www.elastic.co/guide/en/logstash/current/running-logstash-command-line.html"),t(a)])])]),W,n("p",null,[s("您可以配置的设置因插件类型而异。你可以参考： "),n("a",z,[s("Input Plugins"),t(a)]),s(", "),n("a",$,[s("Output Plugins"),t(a)]),s(", "),n("a",X,[s("Filter Plugins"),t(a)]),s(", 和 "),n("a",Y,[s("Codec Plugins"),t(a)]),s(" 。")]),Z,n("p",null,[s("更多详情请见："),n("a",Q,[s("Input Plugins"),t(a)])]),nn,n("p",null,[s("更多详情请见："),n("a",sn,[s("Filter Plugins"),t(a)])]),an,tn,en,n("ul",null,[ln,on,n("li",null,[s("**graphite：**将事件数据发送给 graphite（一个流行的开源工具，存储和绘制指标。 "),n("a",cn,[s("http://graphite.readthedocs.io/en/latest/）。"),t(a)])]),un]),n("p",null,[s("更多详情请见："),n("a",pn,[s("Output Plugins"),t(a)])]),dn,rn,gn,hn,n("p",null,[s("更多插件请见："),n("a",vn,[s("Codec Plugins"),t(a)])]),bn,n("p",null,[s("更多配置项可以参考："),n("a",kn,[s("https://www.elastic.co/guide/en/logstash/current/plugins-inputs-stdin.html"),t(a)])]),mn,n("blockquote",null,[_n,n("p",null,[s("想使用 logback + logstash ，可以使用 "),n("a",fn,[s("logstash-logback-encoder"),t(a)]),s(" 。"),n("a",xn,[s("logstash-logback-encoder"),t(a)]),s(" 提供了 UDP / TCP / 异步方式来传输日志数据到 logstash。")]),n("p",null,[s("如果你使用的是 log4j ，也不是不可以用这种方式，只要引入桥接 jar 包即可。如果你对 log4j 、logback ，或是桥接 jar 包不太了解，可以参考我的这篇博文："),n("a",qn,[s("细说 Java 主流日志工具库"),t(a)]),s(" 。")])]),wn,n("p",null,[s("更多配置项可以参考："),n("a",yn,[s("https://www.elastic.co/guide/en/logstash/current/plugins-inputs-tcp.html"),t(a)])]),Ln,n("p",null,[s("接下来，就是 logback 的具体使用 ，如果对此不了解，不妨参考一下我的这篇博文："),n("a",Pn,[s("细说 Java 主流日志工具库"),t(a)]),s(" 。")]),n("p",null,[jn,n("a",In,[s("我的 logback.xml"),t(a)])]),En,n("p",null,[s("更多配置项可以参考："),n("a",Sn,[s("https://www.elastic.co/guide/en/logstash/current/plugins-inputs-udp.html"),t(a)])]),Cn,n("p",null,[s("（3）接下来，就是 logback 的具体使用 ，如果对此不了解，不妨参考一下我的这篇博文："),n("a",Jn,[s("细说 Java 主流日志工具库"),t(a)]),s(" 。")]),n("p",null,[Tn,n("a",An,[s("我的 logback.xml"),t(a)])]),Nn,n("p",null,[s("更多配置项可以参考："),n("a",Un,[s("https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html"),t(a)])]),Kn,n("p",null,[s("创建 "),n("a",Dn,[s("startup.sh"),t(a)]),s("：")]),On,Bn,n("p",null,[s("创建 "),n("a",Fn,[s("shutdown.sh"),t(a)]),s("：")]),Hn,n("ul",null,[n("li",null,[n("a",Mn,[s("Logstash 官网"),t(a)])]),n("li",null,[n("a",Rn,[s("Logstash Github"),t(a)])]),n("li",null,[n("a",Vn,[s("Logstash 官方文档"),t(a)])]),n("li",null,[n("a",Gn,[s("logstash-logback-encoder"),t(a)])]),n("li",null,[n("a",Wn,[s("ELK Stack 权威指南"),t(a)])]),n("li",null,[n("a",zn,[s("ELK（Elasticsearch、Logstash、Kibana）安装和配置"),t(a)])])])])}const ns=l(u,[["render",$n],["__file","07.Logstash运维.html.vue"]]);export{ns as default};
