const a=JSON.parse('{"key":"v-c10ee2c0","path":"/01.Java/01.JavaSE/05.%E5%B9%B6%E5%8F%91/","title":"Java 并发","lang":"zh-CN","frontmatter":{"title":"Java 并发","date":"2020-06-04T13:51:01.000Z","hidden":true,"index":false,"category":["Java","JavaSE","并发"],"tag":["Java","JavaSE","并发"],"description":"Java 并发 Java 并发总结、整理 Java 并发编程相关知识点。 并发编程并非 Java 语言所独有，而是一种成熟的编程范式，Java 只是用自己的方式实现了并发工作模型。学习 Java 并发编程，应该先熟悉并发的基本概念，然后进一步了解并发的特性以及其特性所面临的问题。掌握了这些，当学习 Java 并发工具时，才会明白它们各自是为了解决什么问题，为什么要这样设计。通过这样由点到面的学习方式，更容易融会贯通，将并发知识形成体系化。 📖 内容 Java 并发简介","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/01.Java/01.JavaSE/05.%E5%B9%B6%E5%8F%91/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Java 并发"}],["meta",{"property":"og:description","content":"Java 并发 Java 并发总结、整理 Java 并发编程相关知识点。 并发编程并非 Java 语言所独有，而是一种成熟的编程范式，Java 只是用自己的方式实现了并发工作模型。学习 Java 并发编程，应该先熟悉并发的基本概念，然后进一步了解并发的特性以及其特性所面临的问题。掌握了这些，当学习 Java 并发工具时，才会明白它们各自是为了解决什么问题，为什么要这样设计。通过这样由点到面的学习方式，更容易融会贯通，将并发知识形成体系化。 📖 内容 Java 并发简介"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-24T23:58:37.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JavaSE"}],["meta",{"property":"article:tag","content":"并发"}],["meta",{"property":"article:published_time","content":"2020-06-04T13:51:01.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-24T23:58:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 并发\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-04T13:51:01.000Z\\",\\"dateModified\\":\\"2024-01-24T23:58:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io\\"}]}"]]},"headers":[{"level":2,"title":"📖 内容","slug":"📖-内容","link":"#📖-内容","children":[{"level":3,"title":"Java 并发简介","slug":"java-并发简介","link":"#java-并发简介","children":[]},{"level":3,"title":"Java 线程基础","slug":"java-线程基础","link":"#java-线程基础","children":[]},{"level":3,"title":"Java 并发核心机制","slug":"java-并发核心机制","link":"#java-并发核心机制","children":[]},{"level":3,"title":"Java 并发锁","slug":"java-并发锁","link":"#java-并发锁","children":[]},{"level":3,"title":"Java 原子类","slug":"java-原子类","link":"#java-原子类","children":[]},{"level":3,"title":"Java 并发容器","slug":"java-并发容器","link":"#java-并发容器","children":[]},{"level":3,"title":"Java 线程池","slug":"java-线程池","link":"#java-线程池","children":[]},{"level":3,"title":"Java 并发工具类","slug":"java-并发工具类","link":"#java-并发工具类","children":[]},{"level":3,"title":"Java 内存模型","slug":"java-内存模型","link":"#java-内存模型","children":[]},{"level":3,"title":"ForkJoin 框架","slug":"forkjoin-框架","link":"#forkjoin-框架","children":[]}]},{"level":2,"title":"📚 资料","slug":"📚-资料","link":"#📚-资料","children":[]},{"level":2,"title":"🚪 传送","slug":"🚪-传送","link":"#🚪-传送","children":[]}],"git":{"createdTime":1694447058000,"updatedTime":1706140717000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":4}]},"readingTime":{"minutes":1.67,"words":500},"filePathRelative":"01.Java/01.JavaSE/05.并发/README.md","localizedDate":"2020年6月4日","excerpt":"<h1> Java 并发</h1>\\n<blockquote>\\n<p>Java 并发总结、整理 Java 并发编程相关知识点。</p>\\n<p>并发编程并非 Java 语言所独有，而是一种成熟的编程范式，Java 只是用自己的方式实现了并发工作模型。学习 Java 并发编程，应该先熟悉并发的基本概念，然后进一步了解并发的特性以及其特性所面临的问题。掌握了这些，当学习 Java 并发工具时，才会明白它们各自是为了解决什么问题，为什么要这样设计。通过这样由点到面的学习方式，更容易融会贯通，将并发知识形成体系化。</p>\\n</blockquote>\\n<h2> 📖 内容</h2>\\n<h3> <a href=\\"/01.Java/01.JavaSE/05.%E5%B9%B6%E5%8F%91/01.Java%E5%B9%B6%E5%8F%91%E7%AE%80%E4%BB%8B.html\\" target=\\"blank\\">Java 并发简介</a></h3>","autoDesc":true}');export{a as data};
