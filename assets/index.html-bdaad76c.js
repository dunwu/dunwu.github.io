const e=JSON.parse('{"key":"v-24ef3cfa","path":"/pages/b165ad/","title":"Java IO 模型","lang":"zh-CN","frontmatter":{"title":"Java IO 模型","date":"2020-11-21T16:36:40.000Z","order":1,"permalink":"/pages/b165ad/","category":["Java","JavaSE","IO"],"tag":["Java","JavaSE","IO"],"description":"Java IO 模型 所谓的I/O，就是计算机内存与外部设备之间拷贝数据的过程。由于 CPU 访问内存的速度远远高于外部设备，因此 CPU 是先把外部设备的数据读到内存里，然后再进行处理。 关键词：InputStream、OutputStream、Reader、Writer UNIX I/O 模型 UNIX 系统下的 I/O 模型有 5 种：","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/pages/b165ad/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Java IO 模型"}],["meta",{"property":"og:description","content":"Java IO 模型 所谓的I/O，就是计算机内存与外部设备之间拷贝数据的过程。由于 CPU 访问内存的速度远远高于外部设备，因此 CPU 是先把外部设备的数据读到内存里，然后再进行处理。 关键词：InputStream、OutputStream、Reader、Writer UNIX I/O 模型 UNIX 系统下的 I/O 模型有 5 种："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-15T22:46:25.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JavaSE"}],["meta",{"property":"article:tag","content":"IO"}],["meta",{"property":"article:published_time","content":"2020-11-21T16:36:40.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-15T22:46:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java IO 模型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-11-21T16:36:40.000Z\\",\\"dateModified\\":\\"2024-05-15T22:46:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io\\"}]}"]]},"headers":[{"level":2,"title":"UNIX I/O 模型","slug":"unix-i-o-模型","link":"#unix-i-o-模型","children":[{"level":3,"title":"同步阻塞 I/O","slug":"同步阻塞-i-o","link":"#同步阻塞-i-o","children":[]},{"level":3,"title":"同步非阻塞 I/O","slug":"同步非阻塞-i-o","link":"#同步非阻塞-i-o","children":[]},{"level":3,"title":"I/O 多路复用","slug":"i-o-多路复用","link":"#i-o-多路复用","children":[]},{"level":3,"title":"信号驱动 I/O","slug":"信号驱动-i-o","link":"#信号驱动-i-o","children":[]},{"level":3,"title":"异步 I/O","slug":"异步-i-o","link":"#异步-i-o","children":[]}]},{"level":2,"title":"Java I/O 模型","slug":"java-i-o-模型","link":"#java-i-o-模型","children":[{"level":3,"title":"BIO","slug":"bio","link":"#bio","children":[]},{"level":3,"title":"NIO","slug":"nio","link":"#nio","children":[]},{"level":3,"title":"AIO","slug":"aio","link":"#aio","children":[]}]},{"level":2,"title":"传统 IO 流","slug":"传统-io-流","link":"#传统-io-流","children":[{"level":3,"title":"字节流","slug":"字节流","link":"#字节流","children":[]},{"level":3,"title":"字符流","slug":"字符流","link":"#字符流","children":[]},{"level":3,"title":"字节流 vs. 字符流","slug":"字节流-vs-字符流","link":"#字节流-vs-字符流","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1694447058000,"updatedTime":1715813185000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":4}]},"readingTime":{"minutes":15.6,"words":4679},"filePathRelative":"01.Java/01.JavaSE/04.IO/01.JavaIO模型.md","localizedDate":"2020年11月21日","excerpt":"<h1> Java IO 模型</h1>\\n<blockquote>\\n<p>所谓的<strong>I/O，就是计算机内存与外部设备之间拷贝数据的过程</strong>。由于 CPU 访问内存的速度远远高于外部设备，因此 CPU 是先把外部设备的数据读到内存里，然后再进行处理。</p>\\n<p><strong>关键词：<code>InputStream</code>、<code>OutputStream</code>、<code>Reader</code>、<code>Writer</code></strong></p>\\n</blockquote>\\n<h2> UNIX I/O 模型</h2>\\n<p>UNIX 系统下的 I/O 模型有 5 种：</p>","autoDesc":true}');export{e as data};
