const e=JSON.parse('{"key":"v-0b19da81","path":"/15.%E5%88%86%E5%B8%83%E5%BC%8F/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/14.Zab%E5%8D%8F%E8%AE%AE.html","title":"ZAB 协议","lang":"zh-CN","frontmatter":{"title":"ZAB 协议","date":"2024-04-28T16:41:07.000Z","order":14,"category":["分布式","分布式理论"],"tag":["分布式","理论","算法","共识性","ZAB"],"description":"ZAB 协议 ZooKeeper 并没有直接采用 Paxos 算法，而是采用了名为 ZAB 的一致性协议。ZAB 协议不是 Paxos 算法，只是比较类似，二者在操作上并不相同。Multi-Paxos 实现的是一系列值的共识，不关心最终达成共识的值是什么，不关心各值的顺序。而 ZooKeeper 需要确保操作的顺序性。 ZAB 协议是 Zookeeper 专门设计的一种支持崩溃恢复的原子广播协议。 ZAB 协议是 ZooKeeper 的数据一致性和高可用解决方案。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/15.%E5%88%86%E5%B8%83%E5%BC%8F/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/14.Zab%E5%8D%8F%E8%AE%AE.html"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"ZAB 协议"}],["meta",{"property":"og:description","content":"ZAB 协议 ZooKeeper 并没有直接采用 Paxos 算法，而是采用了名为 ZAB 的一致性协议。ZAB 协议不是 Paxos 算法，只是比较类似，二者在操作上并不相同。Multi-Paxos 实现的是一系列值的共识，不关心最终达成共识的值是什么，不关心各值的顺序。而 ZooKeeper 需要确保操作的顺序性。 ZAB 协议是 Zookeeper 专门设计的一种支持崩溃恢复的原子广播协议。 ZAB 协议是 ZooKeeper 的数据一致性和高可用解决方案。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-28T14:34:55.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"分布式"}],["meta",{"property":"article:tag","content":"理论"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:tag","content":"共识性"}],["meta",{"property":"article:tag","content":"ZAB"}],["meta",{"property":"article:published_time","content":"2024-04-28T16:41:07.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-28T14:34:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ZAB 协议\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-28T16:41:07.000Z\\",\\"dateModified\\":\\"2024-04-28T14:34:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io\\"}]}"]]},"headers":[{"level":2,"title":"选举 Leader","slug":"选举-leader","link":"#选举-leader","children":[{"level":3,"title":"术语","slug":"术语","link":"#术语","children":[]},{"level":3,"title":"服务器状态","slug":"服务器状态","link":"#服务器状态","children":[]},{"level":3,"title":"选票数据结构","slug":"选票数据结构","link":"#选票数据结构","children":[]},{"level":3,"title":"投票流程","slug":"投票流程","link":"#投票流程","children":[]}]},{"level":2,"title":"原子广播（Atomic Broadcast）","slug":"原子广播-atomic-broadcast","link":"#原子广播-atomic-broadcast","children":[]}],"git":{"createdTime":1714314895000,"updatedTime":1714314895000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":7.02,"words":2107},"filePathRelative":"15.分布式/01.分布式理论/14.Zab协议.md","localizedDate":"2024年4月28日","excerpt":"<h1> ZAB 协议</h1>\\n<blockquote>\\n<p>ZooKeeper 并没有直接采用 Paxos 算法，而是采用了名为 ZAB 的一致性协议。<strong><em>ZAB 协议不是 Paxos 算法</em></strong>，只是比较类似，二者在操作上并不相同。Multi-Paxos 实现的是一系列值的共识，不关心最终达成共识的值是什么，不关心各值的顺序。而 ZooKeeper 需要确保操作的顺序性。</p>\\n<p>ZAB 协议是 Zookeeper 专门设计的一种<strong>支持崩溃恢复的原子广播协议</strong>。</p>\\n<p>ZAB 协议是 ZooKeeper 的数据一致性和高可用解决方案。</p>\\n</blockquote>","autoDesc":true}');export{e as data};
